version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: conecteme_db
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - conecteme_network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: conecteme_backend
    env_file:
      - .env
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - OAUTH42_CLIENT_ID=${OAUTH42_CLIENT_ID}
      - OAUTH42_CLIENT_SECRET=${OAUTH42_CLIENT_SECRET}
      - OAUTH42_REDIRECT_URI=${OAUTH42_REDIRECT_URI}
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,conecteme_backend

    ports:
      - "8000:8000"
    depends_on:
      - db

    volumes:
      - media_data:/app/media

    networks:
      - conecteme_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: conecteme_frontend
    ports:
      - "80"
    depends_on:
      - backend
    networks:
      - conecteme_network

  proxy:
    image: nginx:alpine
    container_name: conecteme_proxy
    # On copie le nginx.conf et on monte le dossier certs
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
      - media_data:/app/media
    ports:
      - "8443:443"
    depends_on:
      - frontend
      - backend

    networks:
      - conecteme_network

networks:
  conecteme_network:
    driver: bridge

volumes:
  postgres_data:
  media_data: